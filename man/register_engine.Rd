% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knitr_engine.R
\name{register_engine}
\alias{register_engine}
\title{Register .NET knitr engine}
\usage{
register_engine()
}
\description{
Registers \code{dotnet} knitr engine for use in R Markdown chunks.
}
\section{Engine options}{

Options (and their defaults) that can be set in \code{engine.opts}:
\describe{
\item{\code{name}}{application name ("myApp" by default)}
\item{\code{dir}}{path to the application source, can be existing application}
\item{\code{file}}{source file name ("Program" by default)}
\item{\code{run_app}}{\code{TRUE} by default; set to \code{FALSE} to not run application}
\item{\code{language}}{"C#" or "F#"; if omitted uses \code{getOption("dotnet.language")} which is C# by default}
\item{\code{add_packages}}{NuGet packages the code depends on, in addition to those listed in \code{getOption("dotnet.language")} (if any)}
}
}

\section{Caching}{

If \code{cache=TRUE} in chunk options, \code{engine.opts$dir} and \code{engine.opts$file}
will be preset and cannot be overridden. Caching only works for single-chunk
programs.
}

\section{Multi-chunk programs}{

In cases where you want to split your program across multiple chunks, there
are a few things to keep in mind. Most importantly is that because this is
accomplished by specifying \code{engine.opts(name = "appName", dir = "/path/to/app")},
you will need to manually manage that directory. A new application will be
created there the first time the document is knit, but will not be deleted
after the fact.

If an application is not ready to be run, set \code{engine.opts(run_app = FALSE)}.
}

\section{Languages}{

When creating a new \code{DotNetApp}, it defaults to the programming language set
in \code{dotnet.language} option, which is C# by default. This can be overridden
by specifying \code{language = "F#"} when creating a new instance or by changing
the default via \code{options(dotnet.language = "F#")}, to avoid having to specify
it every time.
}

\section{Packages}{

Packages can be added to the app after it was created by using \code{add_package}
method. Packages can be added at create time by specifying them with the
\code{packages} argument when calling \verb{$new()}.

To avoid having to add packages manually every time when creating a new app
or if you have multiple chunks using the \code{dotnet} knitr engine and they all
depend on the same set of packages, you can set a character vector of package
names in the \code{dotnet.packages} option. Those packages will be added
automatically to all newly created apps.
}

\references{
\href{https://bookdown.org/yihui/rmarkdown-cookbook/custom-engine.html}{Registering a custom language engine}
}
